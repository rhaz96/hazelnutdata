blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::update_meta_addin()
blogdown:::new_post_addin()
blogdown::new_site(dir = "~/Desktop/SMU")
blogdown::new_site(dir = "~/Desktop")
blogdown::new_site(dir = "~/Desktop/SMU/Something")
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F, comment=NA)
# change path to load data and saved models
knitr::opts_knit$set(root.dir = normalizePath("~/Desktop/SMU/bike-sharing-dataset/CapitalBikeShare"))
library(ggplotly)
library(plotly)
p <- ggplot(mtcars, aes(disp, mpg)) + geom_point()
ggplotly(p)
bikes
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F, comment=NA)
# change path to load data and saved models
knitr::opts_knit$set(root.dir = normalizePath("~/Desktop/SMU/bike-sharing-dataset/CapitalBikeShare"))
# main libraries used; others will be loaded later
library(tswge)
library(fpp2)
library(lubridate)
library(dplyr)
############## Begin with UCI data ##############
# import 2011 and 2012 UCI data - will be merged with 2013-2017 data later
# change file path to match yours!
bikes_uci <- read.csv("day.csv")
# remove atemp since it adds no info on top of temp
# remove season and yr - unnecessary calendar variables
# remove instant; remove workingday - weekday covers this
# remove weathersit - cumbersome to define; this is replaced with actual rain and snowfall data
bikes_uci <- bikes_uci[, -c(1,3,4,8,9,11)]
# rename dteday to TripDate
colnames(bikes_uci)[1] <- "TripDate"
# add 1 to weekday to make consistent with everyday understanding (1-7)
bikes_uci$weekday <- bikes_uci$weekday+1
# convert calendar variables to factor variables
bikes_uci[, 2:4] <- lapply(bikes_uci[, 2:4], factor)
# convert date column to ymd format
bikes_uci$TripDate <- ymd(bikes_uci$TripDate)
# add weekofmon (needed later for the other years' holiday calculations)
bikes_uci <- bikes_uci %>%
mutate(weekofmon = ifelse(between(day(TripDate),1,7), 1,
ifelse(between(day(TripDate),8,14), 2,
ifelse(between(day(TripDate),15,21), 3, 4))))
# un-normalize temp; normalization formula: (t-t_min)/(t_max-t_min); t_max = 39, t_min=-8
bikes_uci$temp <- 47*bikes_uci$temp - 8
# convert temp from celcius to farenheit
bikes_uci$temp <- bikes_uci$temp * 9/5 + 32
# un-normalize humidity; normalization formula: hum/100
bikes_uci$hum <- 100*bikes_uci$hum
# convert weekofmon to factor
bikes_uci$weekofmon <- as.factor(bikes_uci$weekofmon)
library(data.table)
############## Now we import and clean the 2013-2017 data ##############
# data can be found from [here](https://www.capitalbikeshare.com/system-data)
# read as data.table for faster import
b <- list.files(full.names = TRUE)[1:20] %>%
lapply(fread) %>%
bind_rows
# convert to a dataframe to use dplyr functions
b <- data.frame(b)
# convert Start date to ymd:hms format
b$Start.date <- ymd_hms(b$Start.date, tz="US/Eastern")
# make a new column just with the date only
b$TripDate <- as.Date(b$Start.date, tz="US/Eastern")
# compute number of cyclists by date
cyclists <- b %>%
group_by(TripDate) %>%
summarise(casual = sum(Member.type == "Casual"),
registered = sum(Member.type == "Member"),
cnt = casual+registered) %>%
mutate(weekday = wday(TripDate),
mnth = month(TripDate),
weekofmon = ifelse(between(day(TripDate),1,7), 1,
ifelse(between(day(TripDate),8,14), 2,
ifelse(between(day(TripDate),15,21), 3, 4))))
## - Let's define federal holidays
# fixed holidays
holidays <- c(ymd("2013/01/01") + years(0:4), # New Years Day
ymd("2013/12/25") + years(0:4), # Christmas Day
ymd("2013/11/11") + years(0:4), # Veterans Day
ymd("2013/07/04") + years(0:4)) # Independence Day
# holidays that change dates; weekday ranges from 1-7, with 1 being Sunday
# info taken from https://www.thoughtco.com/public-holidays-in-the-united-states-3368327
is_moving_hday <- function() {
# Thanksgiving - fourth Thursday of November
(cyclists$mnth == 11 & cyclists$weekofmon == 4 & cyclists$weekday == 5) |
# MLK's Birthday - third Monday of January
(cyclists$mnth == 1 & cyclists$weekofmon == 3 & cyclists$weekday == 2) |
# George Washington's Birthday - third Monday of February
(cyclists$mnth == 2 & cyclists$weekofmon == 3 & cyclists$weekday == 2) |
# Memorial Day - fourth Monday of May
(cyclists$mnth == 5 & cyclists$weekofmon == 4 & cyclists$weekday == 2) |
# Labor Day - first Monday of September
(cyclists$mnth == 9 & cyclists$weekofmon == 1 & cyclists$weekday == 2) |
# Columbus Day - second Monday of October
(cyclists$mnth == 10 & cyclists$weekofmon == 2 & cyclists$weekday == 2)
}
# create a holiday column in cyclists data frame
cyclists <- cyclists %>%
mutate(holiday = ifelse((is_moving_hday() |
TripDate %in% holidays), 1, 0))
# convert calendar variables to factor variables
cyclists[, 5:8] <- lapply(cyclists[, 5:8], factor)
bikes_uci$TripDate
####### ---------- Include (dry-bulb) temperature, humidity, and precipitation data -------------###
# change file path to match yours
dc_weather <- read.csv("dcweather.csv")
# non-blank temps represent daily averages
dc_weather <- filter(dc_weather, !is.na(DailyAverageDryBulbTemperature))
# keep date, temp, and humidity columns - find their column numbers first
cols_keep <- match(c("DATE","DailyAverageDryBulbTemperature","DailyAverageRelativeHumidity",
"DailyAverageWindSpeed", "DailyPrecipitation", "DailySnowfall"),
colnames(dc_weather))
# remove everything else
dc_weather <- dc_weather[, cols_keep]
# shorten/rename columns
colnames(dc_weather) <- c("TripDate", "temp", "hum", "windspeed", "prec", "snow")
# remove "T" and time values from date column; first convert to character
# equivalent to keeping elements 1-10 of the date string
dc_weather$TripDate <- as.character(dc_weather$TripDate)
dc_weather$TripDate <- substring(dc_weather$TripDate,1,10)
# now convert TripDate column to TripDate object
dc_weather$TripDate <- ymd(dc_weather$TripDate)
# quick check of weather data (using summary function) reveals
# T values in prec and snow; T means trace amounts, so we'll substitute 0 for T
# info taken from https://www1.ncdc.noaa.gov/pub/data/cdo/documentation/GHCND_documentation.pdf
# first need to convert from factor to character - can't directly substitute from factor
dc_weather[, 5:6] <- apply(dc_weather[, 5:6], 2, function(x) as.character(x))
# now make the substitution
for (i in 5:6) {
# if any value in column i equals T, replace with 0, otherwise keep original value
dc_weather[, i] <- ifelse(dc_weather[, i] == "T", "0", dc_weather[, i])
}
# change prec and snow columns to numeric type
dc_weather[, 5:6] <- apply(dc_weather[, 5:6], 2, function(x) as.numeric(x))
# missing 12/31 date for 2011, 2013, and 2014. insert rows into dc_weather
# find row number Dec 30 for '11, '13, and '14.
dec_30s <- which(month(dc_weather$TripDate) == 12 &
day(dc_weather$TripDate) == 30 &
year(dc_weather$TripDate) %in% c(2011,2013,2014))
# create a small dataframe to hold Dec 31 info
dec_31_info <- data.frame(TripDate = ymd(c("2011/12/31", "2013/12/31", "2014/12/31")),
temp = c(58,41,36),
hum = c(62,49,43),
windspeed = c(9,11,7),
prec = c(0,0,0),
snow = c(0,0,0)
)
# cut and paste together all the weather data
dc_weather <- rbind(dc_weather[1:364, ], # 1/1/2011 - 12/30/2011
dec_31_info[1,], # 12/31/2011
dc_weather[365:1094, ], # 1/1/2012 - 12/30/2013
dec_31_info[2, ], # 12/31/2013
dc_weather[1095:1458, ], # 1/1/2014 - 12/30/14
dec_31_info[3,], # 12/31/14
dc_weather[1459:2919, ] # everything else
)
############## combining all three datasets ##############
# add prec and snow values for 2011 and 2012 to bikes_uci
# these are the substitutes for weathersit
bikes_uci <- dc_weather %>%
filter(between(TripDate, "2011/01/01", "2012/12/31")) %>%
select(TripDate, prec, snow) %>%
merge(bikes_uci, by="TripDate", all=T)
# merge dc_weather and cyclists -- this adds on the weather data to cyclists
bikes_temp <- merge(cyclists, dc_weather, by="TripDate")
# now we have all 2013-2017 data.  need to combine this with UCI 2011-2012 data
# first need to reorder columns of bikes_uci (or bike_temp)
cols_matched <- match(colnames(bikes_temp), colnames(bikes_uci))
bikes_uci <- bikes_uci[, cols_matched]
# now merge horizontally (stack UCI data on top of 2013-2017)
bikes <- bind_rows(bikes_uci, bikes_temp)
bikes[which(is.na(bikes$hum)), c(1,4,9:11)]
############## final data cleaning ##############
# find date of missing hum values and get the previous year's date
last_yrs <- bikes[which(is.na(bikes$hum)), ]$TripDate - years(1)
# get the associated humidity values
last_hum <- bikes %>%
filter(TripDate %in% last_yrs) %>%
select(TripDate, hum)
# impute by first storing relevant row numbers
rows_to_impute <- which(is.na(bikes$hum))
bikes[rows_to_impute, 10] <- last_hum$hum
# to model trend (in MLR model), need to include time variable (Time)
# Time is simply the length of the time series (1:nrow(bikes))
bikes$Time <- 1:nrow(bikes)
ggplot(bikes, aes(TripDate,cnt)) + geom_line()
ggplot(bikes, aes(TripDate,cnt)) + geom_line(col="blue")
ggplot(bikes, aes(TripDate,cnt)) + geom_line(col="steel blue")
ggplot(bikes, aes(TripDate,cnt)) + geom_line(col="steelblue")
ggplot(bikes, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
scale_x_date("6 months")
ggplot(bikes, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
scale_x_date(breaks = "6 months")
ggplot(bikes, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
scale_x_date(breaks = "9 months")
ggplot(bikes, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
scale_x_date(breaks = "11 months")
ggplot(bikes, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
scale_x_date(breaks = "12 months")
ggplot(bikes, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
scale_x_date(breaks = "1 year")
ggplot(bikes, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
scale_x_date(breaks = "11 months")
ggplot(bikes, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
scale_x_date(breaks = "11 months") +
theme(panel.background = element_blank())
ggplot(bikes, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
scale_x_date(breaks = "11 months") +
theme(panel.grid = element_blank())
ggplot(bikes, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
xlab("")+
ylab("Total Trips")+
scale_x_date(breaks = "11 months") +
theme(panel.grid = element_blank()) +
ggplot(bikes, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
xlab("")+
ylab("Total Trips")+
scale_x_date(breaks = "11 months") +
theme(panel.grid = element_blank()) +
ggplot(bikes, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
xlab("")+
ylab("Total Trips")+
scale_x_date(breaks = "11 months") +
theme(panel.grid = element_blank())
ggplot(bikes, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
xlab("")+
ylab("Total Trips")+
scale_x_date(breaks = "11 months") +
theme(panel.grid = element_blank())+
ggtitle("Capital BikeShare Daily Trips (2011-2017)")
ggplot(bikes, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
xlab("")+
ylab("Total Trips")+
scale_x_date(breaks = "11 months") +
ggtitle("Capital BikeShare Daily Trips (2011-2017)") +
theme(panel.grid = element_blank(),
plot.title = element_text(hjust=0.5))+
ggplot(bikes, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
xlab("")+
ylab("Total Trips")+
scale_x_date(breaks = "11 months") +
ggtitle("Capital BikeShare Daily Trips (2011-2017)") +
theme(panel.grid = element_blank(),
plot.title = element_text(hjust=0.5))
ggplot(bikes, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
xlab("")+
ylab("Total Trips")+
scale_x_date(breaks = "11 months") +
ggtitle("Capital BikeShare Daily Trips (2011-2017)") +
theme(panel.grid = element_blank(),
plot.title = element_text(hjust=0.5, family = "Georgia"))
bikes %>% filter(between(TripDate, "2017/01/01", "2017/12/31")) -> bikes_2017
ggplot(bikes_2017, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
xlab("")+
ylab("Total Trips")+
scale_x_date(breaks = "11 months") +
ggtitle("Capital BikeShare Daily Trips (2017)") +
theme(panel.grid = element_blank(),
plot.title = element_text(hjust=0.5, family = "Georgia"))
bikes %>% filter(between(TripDate, "2017/01/01", "2017/12/31")) -> bikes_2017
ggplot(bikes_2017, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
xlab("")+
ylab("Total Trips")+
scale_x_date(breaks = "11 months") +
ggtitle("Capital BikeShare Daily Trips (2017)") +
theme(panel.grid = element_blank(),
plot.title = element_text(hjust=0.5, family = "Georgia"))
bikes %>% filter(between(TripDate, "2017/01/01", "2017/12/31")) -> bikes_2017
ggplot(bikes_2017, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
xlab("")+
ylab("Total Trips")+
scale_x_date(breaks = "1 month") +
ggtitle("Capital BikeShare Daily Trips (2017)") +
theme(panel.grid = element_blank(),
plot.title = element_text(hjust=0.5, family = "Georgia"))
bikes %>% filter(between(TripDate, "2017/01/01", "2017/12/31")) -> bikes_2017
ggplot(bikes_2017, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
xlab("")+
ylab("Total Trips")+
ggtitle("Capital BikeShare Daily Trips (2017)") +
theme(panel.grid = element_blank(),
plot.title = element_text(hjust=0.5, family = "Georgia"))
ggplot(bikes_2017, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
xlab("")+
ylab("Total Trips")+
scale_x_date(breaks = "4 month") +
ggtitle("Capital BikeShare Daily Trips (2017)") +
theme(panel.grid = element_blank(),
plot.title = element_text(hjust=0.5, family = "Georgia"))
ggplot(bikes_2017, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
xlab("")+
ylab("Total Trips")+
scale_x_date(breaks = "3 month") +
ggtitle("Capital BikeShare Daily Trips (2017)") +
theme(panel.grid = element_blank(),
plot.title = element_text(hjust=0.5, family = "Georgia"))
ggplot(bikes_2017, aes(TripDate,cnt)) +
geom_line(col="steelblue") +
xlab("")+
ylab("Total Trips")+
scale_x_date(breaks = "3 months") +
ggtitle("Capital BikeShare Daily Trips (2017)") +
theme(panel.grid = element_blank(),
plot.title = element_text(hjust=0.5, family = "Georgia"))
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
2+2
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::new_post_addin()
par(mfrow = c(10,10))
par(mfrow = c(10,10))
for (i in 1:100) {
x = sample(1:100, 50, replace = T)
y = sample(1:100, 50, replace=T)
plot(x,y)
}
par(mfrow = c(10,10))
for (i in 1:100) {
x = sample(1:100, 50, replace = T)
y = sample(1:100, 50, replace=T)
plot(x,y)
}
par(mfrow = c(10,10))
for (i in 1:100) {
x = sample(1:100, 50, replace = T)
y = sample(1:100, 50, replace=T)
plot(x,y)
}
dev.off()
par(mfrow = c(10,10))
for (i in 1:100) {
x = sample(1:100, 50, replace = T)
y = sample(1:100, 50, replace=T)
plot(x,y)
}
par(mfrow = c(10,10))
for (i in 1:100) {
x = sample(1:100, 50, replace = T)
y = sample(1:100, 50, replace=T)
plot(x,y)
}
for (i in 1:100) {
x = sample(1:100, 50, replace = T)
y = sample(1:100, 50, replace=T)
plot(x,y)
}
dev.off()
for (i in 1:100) {
x = sample(1:100, 50, replace = T)
y = sample(1:100, 50, replace=T)
plot(x,y)
}
for (i in 1:100) {
x = sample(1:1000, 100, replace = T)
y = sample(1:1000, 100, replace=T)
plot(x,y)
}
par(mfrow = c(10,10))
par(mfrow = c(10,10))
for (i in 1:10) {
x = sample(1:1000, 100, replace = T)
y = sample(1:1000, 100, replace=T)
plot(x,y)
}
for (i in 1:4) {
x = sample(1:1000, 100, replace = T)
y = sample(1:1000, 100, replace=T)
plot(x,y)
}
par(mfrow = c(2,2))
for (i in 1:4) {
x = sample(1:1000, 100, replace = T)
y = sample(1:1000, 100, replace=T)
plot(x,y)
}
par(mfrow = c(5,5))
for (i in 1:25) {
x = sample(1:1000, 100, replace = T)
y = sample(1:1000, 100, replace=T)
plot(x,y)
}
par(mfrow = c(10,10))
for (i in 1:100) {
x = sample(1:1000, 100, replace = T)
y = sample(1:1000, 100, replace=T)
plot(x,y)
}
par(mfrow = c(10,10))
for (i in 1:100) {
x = sample(1:1000, 100, replace = T)
y = sample(1:1000, 100, replace=T)
plot(x,y)
}
100^2 -100
9900/2
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
library(plotly)
blogdown:::serve_site()
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F, comment=NA)
library(plotly)
p <- ggplot(mtcars, aes(disp, mpg)) + geom_point()
ggplotly(p)
library(plotly)
plot_ly(mtcars,
x = ~disp,
y = ~mpg)
<a href="https://www.codecogs.com/eqnedit.php?latex=\inline&space;c^2&space;=&space;a^2&space;&plus;&space;b^2&space;-&space;2abcos(C)" target="_blank"><img src="https://latex.codecogs.com/gif.latex?\inline&space;c^2&space;=&space;a^2&space;&plus;&space;b^2&space;-&space;2abcos(C)" title="c^2 = a^2 + b^2 - 2abcos(C)" /></a>
<a href="https://www.codecogs.com/eqnedit.php?latex=\inline&space;c^2&space;=&space;a^2&space;&plus;&space;b^2&space;-&space;2abcos(C)" target="_blank"><img src="https://latex.codecogs.com/gif.latex?\inline&space;c^2&space;=&space;a^2&space;&plus;&space;b^2&space;-&space;2abcos(C)" title="c^2 = a^2 + b^2 - 2abcos(C)" /></a>
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
?mtcars
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F, comment=NA)
library(plotly)
plot_ly(mtcars,
x = ~qsec,
y = ~mpg)
library(plotly)
plot_ly(mtcars,
x = ~hp,
y = ~mpg)
